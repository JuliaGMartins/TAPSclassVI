# -*- coding: utf-8 -*-
"""ProcessamentodeImagemAula5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uJ0aF-EzbFwUYnakXh0ci4OLEpVetZND
"""

import numpy as np
import matplotlib.pyplot as plt
import cv2
from PIL import Image, ImageFilter

img = cv2.imread('fig.jpg', cv2.IMREAD_GRAYSCALE)

#Filtro da média
def filtro_media (img):
    n = 3
    borda = (n-1)//2
    filtro = np.array([[1,2,1],[2,4,2],[1,2,1]]) / 16
    altura, largura = img.shape
    out_image = np.zeros((altura,largura))

    for x in range(borda, altura - borda):
      for y in range(borda, largura - borda):
        janela= img[x-borda:x+borda+1,y-borda:y+borda+1]
        imagem[x,y] = np.sum(filtro * janela)

    plt.imshow(imagem, cmap= 'gray')

#Filtro da média
def filtro_media2 (img):
    n = 5
    borda = (n-1)//2
    altura, largura = img.shape
    filtro = np.ones((n,n))/n**2
    imagem = np.zeros((altura,largura))

    for x in range(borda, altura - borda):
      for y in range(borda, largura - borda):
        janela= img[x-borda:x+borda+1,y-borda:y+borda+1]
        imagem[x,y] = np.sum(filtro * janela)

    plt.imshow(imagem, cmap= 'gray')

#filtro passa-alta / laplaciana
def filtro_laplaciano (img):
    n = 3
    borda = (n-1)//2
    filtro = np.array([[0,1,0],[1,-4,1],[0,1,0]])
    altura, largura = img.shape
    imagem = np.zeros((altura,largura))

    for x in range(borda, altura - borda):
      for y in range(borda, largura - borda):
        janela= img[x-borda:x+borda+1,y-borda:y+borda+1]
        imagem[x,y] = np.sum(filtro * janela)

    plt.imshow(imagem, cmap='gray', vmax=255, vmin=0)

#filtro sobel dy
def filtro_sobelDy (img):
    n = 3
    borda = (n-1)//2
    filtro = np.array([[-1,0,1],[-2,0,2],[-1,0,1]])
    altura, largura = img.shape
    dy = np.zeros((altura,largura))

    for x in range(borda, altura - borda):
      for y in range(borda, largura - borda):
        janela= img[x-borda:x+borda+1,y-borda:y+borda+1]
        dy[x,y] = np.sum(filtro * janela)

    plt.imshow(dy, cmap = 'gray')

#filtro sobel dx
def filtro_sobelDx (img):
    n = 3
    borda = (n-1)//2
    w = np.array([[-1,-2,-1],[0,0,0],[1,2,1]])
    altura, largura = img.shape
    dx = np.zeros((altura,largura))

    for x in range(borda, altura - borda):
      for y in range(borda, largura - borda):
        janela= img[x-borda:x+borda+1,y-borda:y+borda+1]
        dx[x,y] = np.sum(w*janela)

    plt.imshow(dx, cmap = 'gray')

#magnitude da imagem dada pelo dx e dy, obtendo as bordas
def magnitude (dx, dy):
    magnitude = np.sqrt(dx**2 + dy**2)
    plt.imshow(magnitude, cmap = 'gray')

#magnitune + imagem, destacando as bordas
def magnitude_mais_img (img, magnitude):
    plt.imshow(img+magnitude, cmap = 'gray', vmax=255, vmin=0)
